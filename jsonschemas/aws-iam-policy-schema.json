{
  "$schema": "http://json-schema.org/draft-07/schema",
  "description": "AWS IAM Policy schema",
  "type": "object",
  "required": [
    "Statement"
  ],
  "additionalProperties": false,
  "properties": {
    "Version": {
      "type": "string",
      "description": "The Version policy element specifies the language syntax rules that are to be used to process a policy. To use all of the available policy features, include the following Version element outside the Statement element in all of your policies.",
      "enum": [
        "2008-10-17",
        "2012-10-17"
      ]
    },
    "Id": {
      "type": "string",
      "description": "The Id element specifies an optional identifier for the policy. The ID is used differently in different services.\nFor services that let you set an ID element, we recommend you use a UUID (GUID) for the value, or incorporate a UUID as part of the ID to ensure uniqueness."
    },
    "Statement": {
      "description": "The Statement element is the main element for a policy. This element is required. The Statement element can contain a single statement or an array of individual statements. Each individual statement block must be enclosed in curly braces { }. For multiple statements, the array must be enclosed in square brackets [ ].",
      "oneOf": [
        {
          "$ref": "#/definitions/Statement"
        },
        {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Statement"
          }
        }
      ]
    }
  },
  "definitions": {
    "aws-arn": {
      "type": "string",
      "pattern": "^arn:aws:[^:]+:[^:]*:(?:\\d{12}|\\*)?:.+$"
    },
    "aws-principal-arn": {
      "type": "string",
      "pattern": "^arn:aws:iam::\\d{12}:(?:root|user|group|role)"
    },
    "aws-service": {
      "type": "string",
      "pattern": ".+.amazonaws.com$"
    },
    "aws-service-array": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/aws-service"
      }
    },
    "aws-service-or-aws-service-array": {
      "anyOf": [
        {
          "$ref": "#/definitions/aws-service"
        },
        {
          "$ref": "#/definitions/aws-service-array"
        }
      ]
    },
    "string-array": {
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "string-or-string-array": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "$ref": "#/definitions/string-array"
        }
      ]
    },
    "wildcard": {
      "const": "*"
    },
    "condition-set-value": {
      "type": "object",
      "additionalProperties": {
        "$ref": "#/definitions/string-array"
      }
    },
    "condition-value": {
      "type": "object",
      "additionalProperties": {
        "anyOf": [
          {
            "$ref": "#/definitions/string-or-string-array"
          },
          {
            "type": "boolean"
          },
          {
            "type": "number"
          }
        ]
      }
    },
    "Statement": {
      "allOf": [
        {
          "oneOf": [
            {
              "required": [
                "Action"
              ]
            },
            {
              "required": [
                "NotAction"
              ]
            }
          ]
        },
        {
          "type": "object",
          "required": [
            "Effect"
          ],
          "additionalProperties": false,
          "properties": {
            "Sid": {
              "type": "string",
              "description": "You can provide an optional identifier, Sid (statement ID) for the policy statement. You can assign a Sid value to each statement in a statement array. In services that let you specify an ID element, such as SQS and SNS, the Sid value is just a sub-ID of the policy document ID. In IAM, the Sid value must be unique within a JSON policy."
            },
            "Effect": {
              "type": "string",
              "description": "The Effect element is required and specifies whether the statement results in an allow or an explicit deny. Valid values for Effect are Allow and Deny.",
              "enum": [
                "Allow",
                "Deny"
              ]
            },
            "Action": {
              "description": "The Action element describes the specific action or actions that will be allowed or denied. Statements must include either an Action or NotAction element. Each AWS service has its own set of actions that describe tasks that you can perform with that service. For example, the list of actions for Amazon S3 can be found at Specifying Permissions in a Policy in the Amazon Simple Storage Service User Guide, the list of actions for Amazon EC2 can be found in the Amazon EC2 API Reference, and the list of actions for AWS Identity and Access Management can be found in the IAM API Reference. To find the list of actions for other services, consult the API reference documentation for the service.\nYou specify a value using a service namespace as an action prefix (iam, ec2, sqs, sns, s3, etc.) followed by the name of the action to allow or deny. The name must match an action that is supported by the service. The prefix and the action name are case insensitive. For example, iam:ListAccessKeys is the same as IAM:listaccesskeys. The following examples show Action elements for different services.",
              "$ref": "#/definitions/Action"
            },
            "NotAction": {
              "description": "NotAction is an advanced policy element that explicitly matches everything except the specified list of actions. Using NotAction can result in a shorter policy by listing only a few actions that should not match, rather than including a long list of actions that will match. When using NotAction, you should keep in mind that actions specified in this element are the only actions in that are limited. This, in turn, means that all of the applicable actions or services that are not listed are allowed if you use the Allow effect. In addition, such unlisted actions or services are denied if you use the Deny effect. When you use NotAction with the Resource element, you provide scope for the policy. This is how AWS determines which actions or services are applicable. For more information, see the following example policy.\n\nNotAction with Allow\nYou can use the NotAction element in a statement with 'Effect': 'Allow' to provide access to all of the actions in an AWS service, except for the actions specified in NotAction. You can use it with the Resource element to provide scope for the policy, limiting the allowed actions to the actions that can be performed on the specified resource.\nThe following example allows users to access all of the Amazon S3 actions that can be performed on any S3 resource except for deleting a bucket. This does not allow users to use the ListAllMyBuckets S3 API operation, because that action requires the '*' resource. This policy also does not allow actions in other services, because other service actions are not applicable to the S3 resources.",
              "$ref": "#/definitions/Action"
            },
            "Principal": {
              "description": "Use the Principal element in a resource-based JSON policy to specify the principal that is allowed or denied access to a resource.\nYou must use the Principal element in resource-based policies. Several services support resource-based policies, including IAM. The IAM resource-based policy type is a role trust policy. In IAM roles, use the Principal element in the role trust policy to specify who can assume the role. For cross-account access, you must specify the 12-digit identifier of the trusted account. To learn whether principals in accounts outside of your zone of trust (trusted organization or account) have access to assume your roles, see What is IAM Access Analyzer?.",
              "$ref": "#/definitions/Principal"
            },
            "NotPrincipal": {
              "description": "Use the NotPrincipal element to specify the IAM user, federated user, IAM role, AWS account, AWS service, or other principal that is not allowed or denied access to a resource. The NotPrincipal element enables you to specify an exception to a list of principals. Use this element to deny access to all principals except the one named in the NotPrincipal element. The syntax for specifying NotPrincipal is the same as for specifying AWS JSON policy elements: Principal.",
              "$ref": "#/definitions/Principal"
            },
            "Resource": {
              "description": "The Resource element specifies the object or objects that the statement covers. Statements must include either a Resource or a NotResource element. You specify a resource using an ARN. For more information about the format of ARNs, see IAM ARNs.",
              "$ref": "#/definitions/Resource"
            },
            "NotResource": {
              "description": "NotResource is an advanced policy element that explicitly matches every resource except those specified. Using NotResource can result in a shorter policy by listing only a few resources that should not match, rather than including a long list of resources that will match. This is particularly useful for policies that apply within a single AWS service.",
              "$ref": "#/definitions/Resource"
            },
            "Condition": {
              "description": "The Condition element (or Condition block) lets you specify conditions for when a policy is in effect. The Condition element is optional. In the Condition element, you build expressions in which you use condition operators (equal, less than, etc.) to match the condition keys and values in the policy against keys and values in the request context. To learn more about the request context, see Request.",
              "$ref": "#/definitions/Condition"
            }
          },
          "if": {
            "properties": {
              "Action": {
                "const": "sts:AssumeRole"
              }
            }
          },
          "then": {
            "properties": {
              "Resource": {
                "$ref": "#/definitions/Resource"
              }
            }
          },
          "else": {
            "properties": "#/definitions/resource-switch"
          }
        }
      ]
    },
    "Action": {
      "anyOf": [
        {
          "$ref": "#/definitions/wildcard"
        },
        {
          "$ref": "#/definitions/string-or-string-array"
        }
      ]
    },
    "Principal": {
      "anyOf": [
        {
          "$ref": "#/definitions/wildcard"
        },
        {
          "type": "object",
          "properties": {
            "AWS": {
              "anyOf": [
                {
                  "$ref": "#/definitions/wildcard"
                },
                {
                  "$ref": "#/definitions/aws-principal-arn"
                },
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/aws-principal-arn"
                  }
                }
              ]
            },
            "Federated": {
              "$ref": "#/definitions/string-or-string-array"
            },
            "CanonicalUser": {
              "$ref": "#/definitions/string-or-string-array"
            },
            "Service": {
              "$ref": "#/definitions/aws-service-or-aws-service-array"
            }
          }
        }
      ]
    },
    "resource-switch": {
      "oneOf": [
        {
          "required": [
            "Resource"
          ]
        },
        {
          "required": [
            "NotResource"
          ]
        }
      ]
    },
    "Resource": {
      "anyOf": [
        {
          "$ref": "#/definitions/wildcard"
        },
        {
          "$ref": "#/definitions/aws-arn"
        },
        {
          "type": "array",
          "items": {
            "$ref": "#/definitions/aws-arn"
          }
        }
      ]
    },
    "Condition": {
      "type": "object",
      "properties": {
        "Null": {
          "type": "object",
          "additionalProperties": {
            "enum": [
              "true",
              "false",
              true,
              false
            ]
          }
        },
        "StringEquals": {
          "$ref": "#/definitions/condition-value"
        },
        "StringNotEquals": {
          "$ref": "#/definitions/condition-value"
        },
        "StringEqualsIgnoreCase": {
          "$ref": "#/definitions/condition-value"
        },
        "StringNotEqualsIgnoreCase": {
          "$ref": "#/definitions/condition-value"
        },
        "StringLike": {
          "$ref": "#/definitions/condition-value"
        },
        "StringNotLike": {
          "$ref": "#/definitions/condition-value"
        },
        "NumericEquals": {
          "$ref": "#/definitions/condition-value"
        },
        "NumericNotEquals": {
          "$ref": "#/definitions/condition-value"
        },
        "NumericLessThan": {
          "$ref": "#/definitions/condition-value"
        },
        "NumericLessThanEquals": {
          "$ref": "#/definitions/condition-value"
        },
        "NumericGreaterThan": {
          "$ref": "#/definitions/condition-value"
        },
        "NumericGreaterThanEquals": {
          "$ref": "#/definitions/condition-value"
        },
        "DateEquals": {
          "$ref": "#/definitions/condition-value"
        },
        "DateNotEquals": {
          "$ref": "#/definitions/condition-value"
        },
        "DateLessThan": {
          "$ref": "#/definitions/condition-value"
        },
        "DateLessThanEquals": {
          "$ref": "#/definitions/condition-value"
        },
        "DateGreaterThan": {
          "$ref": "#/definitions/condition-value"
        },
        "DateGreaterThanEquals": {
          "$ref": "#/definitions/condition-value"
        },
        "Bool": {
          "$ref": "#/definitions/condition-value"
        },
        "BinaryEquals": {
          "$ref": "#/definitions/condition-value"
        },
        "IpAddress": {
          "$ref": "#/definitions/condition-value"
        },
        "NotIpAddress": {
          "$ref": "#/definitions/condition-value"
        },
        "ArnEquals": {
          "$ref": "#/definitions/condition-value"
        },
        "ArnNotEquals": {
          "$ref": "#/definitions/condition-value"
        },
        "ArnLike": {
          "$ref": "#/definitions/condition-value"
        },
        "ArnNotLike": {
          "$ref": "#/definitions/condition-value"
        },
        "StringEqualsIfExists": {
          "$ref": "#/definitions/condition-value"
        },
        "StringNotEqualsIfExists": {
          "$ref": "#/definitions/condition-value"
        },
        "StringEqualsIgnoreCaseIfExists": {
          "$ref": "#/definitions/condition-value"
        },
        "StringNotEqualsIgnoreCaseIfExists": {
          "$ref": "#/definitions/condition-value"
        },
        "StringLikeIfExists": {
          "$ref": "#/definitions/condition-value"
        },
        "StringNotLikeIfExists": {
          "$ref": "#/definitions/condition-value"
        },
        "NumericEqualsIfExists": {
          "$ref": "#/definitions/condition-value"
        },
        "NumericNotEqualsIfExists": {
          "$ref": "#/definitions/condition-value"
        },
        "NumericLessThanIfExists": {
          "$ref": "#/definitions/condition-value"
        },
        "NumericLessThanEqualsIfExists": {
          "$ref": "#/definitions/condition-value"
        },
        "NumericGreaterThanIfExists": {
          "$ref": "#/definitions/condition-value"
        },
        "NumericGreaterThanEqualsIfExists": {
          "$ref": "#/definitions/condition-value"
        },
        "DateEqualsIfExists": {
          "$ref": "#/definitions/condition-value"
        },
        "DateNotEqualsIfExists": {
          "$ref": "#/definitions/condition-value"
        },
        "DateLessThanIfExists": {
          "$ref": "#/definitions/condition-value"
        },
        "DateLessThanEqualsIfExists": {
          "$ref": "#/definitions/condition-value"
        },
        "DateGreaterThanIfExists": {
          "$ref": "#/definitions/condition-value"
        },
        "DateGreaterThanEqualsIfExists": {
          "$ref": "#/definitions/condition-value"
        },
        "BoolIfExists": {
          "$ref": "#/definitions/condition-value"
        },
        "BinaryEqualsIfExists": {
          "$ref": "#/definitions/condition-value"
        },
        "IpAddressIfExists": {
          "$ref": "#/definitions/condition-value"
        },
        "NotIpAddressIfExists": {
          "$ref": "#/definitions/condition-value"
        },
        "ArnEqualsIfExists": {
          "$ref": "#/definitions/condition-value"
        },
        "ArnNotEqualsIfExists": {
          "$ref": "#/definitions/condition-value"
        },
        "ArnLikeIfExists": {
          "$ref": "#/definitions/condition-value"
        },
        "ArnNotLikeIfExists": {
          "$ref": "#/definitions/condition-value"
        },
        "ForAllValues:StringEquals": {
          "$ref": "#/definitions/condition-set-value"
        },
        "ForAllValues:StringNotEquals": {
          "$ref": "#/definitions/condition-set-value"
        },
        "ForAllValues:StringEqualsIgnoreCase": {
          "$ref": "#/definitions/condition-set-value"
        },
        "ForAllValues:StringNotEqualsIgnoreCase": {
          "$ref": "#/definitions/condition-set-value"
        },
        "ForAllValues:StringLike": {
          "$ref": "#/definitions/condition-set-value"
        },
        "ForAllValues:StringNotLike": {
          "$ref": "#/definitions/condition-set-value"
        },
        "ForAllValues:NumericEquals": {
          "$ref": "#/definitions/condition-set-value"
        },
        "ForAllValues:NumericNotEquals": {
          "$ref": "#/definitions/condition-set-value"
        },
        "ForAllValues:NumericLessThan": {
          "$ref": "#/definitions/condition-set-value"
        },
        "ForAllValues:NumericLessThanEquals": {
          "$ref": "#/definitions/condition-set-value"
        },
        "ForAllValues:NumericGreaterThan": {
          "$ref": "#/definitions/condition-set-value"
        },
        "ForAllValues:NumericGreaterThanEquals": {
          "$ref": "#/definitions/condition-set-value"
        },
        "ForAllValues:DateEquals": {
          "$ref": "#/definitions/condition-set-value"
        },
        "ForAllValues:DateNotEquals": {
          "$ref": "#/definitions/condition-set-value"
        },
        "ForAllValues:DateLessThan": {
          "$ref": "#/definitions/condition-set-value"
        },
        "ForAllValues:DateLessThanEquals": {
          "$ref": "#/definitions/condition-set-value"
        },
        "ForAllValues:DateGreaterThan": {
          "$ref": "#/definitions/condition-set-value"
        },
        "ForAllValues:DateGreaterThanEquals": {
          "$ref": "#/definitions/condition-set-value"
        },
        "ForAllValues:Bool": {
          "$ref": "#/definitions/condition-set-value"
        },
        "ForAllValues:BinaryEquals": {
          "$ref": "#/definitions/condition-set-value"
        },
        "ForAllValues:IpAddress": {
          "$ref": "#/definitions/condition-set-value"
        },
        "ForAllValues:NotIpAddress": {
          "$ref": "#/definitions/condition-set-value"
        },
        "ForAllValues:ArnEquals": {
          "$ref": "#/definitions/condition-set-value"
        },
        "ForAllValues:ArnNotEquals": {
          "$ref": "#/definitions/condition-set-value"
        },
        "ForAllValues:ArnLike": {
          "$ref": "#/definitions/condition-set-value"
        },
        "ForAllValues:ArnNotLike": {
          "$ref": "#/definitions/condition-set-value"
        },
        "ForAnyValues:StringEquals": {
          "$ref": "#/definitions/condition-set-value"
        },
        "ForAnyValues:StringNotEquals": {
          "$ref": "#/definitions/condition-set-value"
        },
        "ForAnyValues:StringEqualsIgnoreCase": {
          "$ref": "#/definitions/condition-set-value"
        },
        "ForAnyValues:StringNotEqualsIgnoreCase": {
          "$ref": "#/definitions/condition-set-value"
        },
        "ForAnyValues:StringLike": {
          "$ref": "#/definitions/condition-set-value"
        },
        "ForAnyValues:StringNotLike": {
          "$ref": "#/definitions/condition-set-value"
        },
        "ForAnyValues:NumericEquals": {
          "$ref": "#/definitions/condition-set-value"
        },
        "ForAnyValues:NumericNotEquals": {
          "$ref": "#/definitions/condition-set-value"
        },
        "ForAnyValues:NumericLessThan": {
          "$ref": "#/definitions/condition-set-value"
        },
        "ForAnyValues:NumericLessThanEquals": {
          "$ref": "#/definitions/condition-set-value"
        },
        "ForAnyValues:NumericGreaterThan": {
          "$ref": "#/definitions/condition-set-value"
        },
        "ForAnyValues:NumericGreaterThanEquals": {
          "$ref": "#/definitions/condition-set-value"
        },
        "ForAnyValues:DateEquals": {
          "$ref": "#/definitions/condition-set-value"
        },
        "ForAnyValues:DateNotEquals": {
          "$ref": "#/definitions/condition-set-value"
        },
        "ForAnyValues:DateLessThan": {
          "$ref": "#/definitions/condition-set-value"
        },
        "ForAnyValues:DateLessThanEquals": {
          "$ref": "#/definitions/condition-set-value"
        },
        "ForAnyValues:DateGreaterThan": {
          "$ref": "#/definitions/condition-set-value"
        },
        "ForAnyValues:DateGreaterThanEquals": {
          "$ref": "#/definitions/condition-set-value"
        },
        "ForAnyValues:Bool": {
          "$ref": "#/definitions/condition-set-value"
        },
        "ForAnyValues:BinaryEquals": {
          "$ref": "#/definitions/condition-set-value"
        },
        "ForAnyValues:IpAddress": {
          "$ref": "#/definitions/condition-set-value"
        },
        "ForAnyValues:NotIpAddress": {
          "$ref": "#/definitions/condition-set-value"
        },
        "ForAnyValues:ArnEquals": {
          "$ref": "#/definitions/condition-set-value"
        },
        "ForAnyValues:ArnNotEquals": {
          "$ref": "#/definitions/condition-set-value"
        },
        "ForAnyValues:ArnLike": {
          "$ref": "#/definitions/condition-set-value"
        },
        "ForAnyValues:ArnNotLike": {
          "$ref": "#/definitions/condition-set-value"
        }
      }
    }
  }
}