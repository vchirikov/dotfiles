{
  "$schema": "http://json-schema.org/draft-07/schema",
  "description": "OpensearchTenant is the Schema for the opensearchtenants API",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "OpensearchTenantSpec defines the desired state of OpensearchTenant",
      "properties": {
        "description": {
          "type": "string"
        },
        "opensearchCluster": {
          "description": "LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.",
          "properties": {
            "name": {
              "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
              "type": "string"
            }
          },
          "type": "object",
          "x-kubernetes-map-type": "atomic"
        }
      },
      "required": [
        "opensearchCluster"
      ],
      "type": "object"
    },
    "status": {
      "description": "OpensearchTenantStatus defines the observed state of OpensearchTenant",
      "properties": {
        "existingTenant": {
          "type": "boolean"
        },
        "managedCluster": {
          "description": "UID is a type that holds unique ID values, including UUIDs.  Because we don't ONLY use UUIDs, this is an alias to string.  Being a type captures intent and helps make sure that UIDs and names do not get conflated.",
          "type": "string"
        },
        "reason": {
          "type": "string"
        },
        "state": {
          "type": "string"
        }
      },
      "type": "object"
    }
  },
  "required": [],
  "title": "OpensearchTenant",
  "type": "object",
  "x-kubernetes-group-version-kind.group": "opensearch.opster.io",
  "x-kubernetes-group-version-kind.kind": "OpensearchTenant",
  "x-kubernetes-group-version-kind.version": "v1"
}
